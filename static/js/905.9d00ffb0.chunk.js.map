{"version":3,"file":"static/js/905.9d00ffb0.chunk.js","mappings":"sTAGaA,EAAUC,EAAAA,EAAAA,IAAH,wDAIPC,GAAaD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,4LAUVG,EAAaH,EAAAA,EAAAA,GAAH,kI,mBCbjBC,GAAaD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,iPAeHI,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAAC,EAAD,CAAYD,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,EC0DD,MA7EA,WAAyB,IAAD,IACdE,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,gBAezC,IAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAgBZ,GAFvC,OAEUa,EAFV,OAGIT,EAASS,GACTP,GAAY,GAJhB,gDAMIQ,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAAChB,IAEAK,EACF,OACE,2BACE,UAAC,KAAD,YACE,SAACT,EAAD,CAAUC,GAAIU,EAAd,4BAAkD,KAClD,UAAChB,EAAD,YACE,gBACE0B,IAAK,kCAAoCd,EAAMe,YAC/CC,IAAKhB,EAAMiB,SAGb,4BACE,0BACGjB,EAAMiB,MADT,KAEGjB,EAAMkB,cAAgBlB,EAAMkB,aAAaC,MAAM,EAAG,GAFrD,QAIA,yCAAsC,GAArBnB,EAAMoB,cAAmBC,UAA1C,QACA,qCACA,uBAAIrB,EAAMsB,YACV,0BACE,qCACCtB,EAAMuB,OAAOC,OAAS,EACnBxB,EAAMuB,OACHJ,MAAM,EAAG,GACTM,KAAI,SAAAC,GAAK,OAAI,4BAAsBA,EAAMC,KAA5B,MAAWD,EAAM7B,GAArB,IACZG,EAAMuB,OAAOE,KAAI,SAAAC,GAAK,OACpB,4BAAsBA,EAAMC,KAA5B,MAAWD,EAAM7B,GADG,cAMhC,UAACL,EAAD,YACE,yBACE,SAACF,EAAD,CAAYI,GAAG,OAAf,qBAEF,yBACE,SAACJ,EAAD,CAAYI,GAAG,UAAf,2BAGJ,SAAC,EAAAkC,SAAD,CACEC,UACE,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,IAPf,UAWE,SAAC,KAAD,UAMX,C","sources":["pages/MovieDetails/MovieDetails.styled.js","components/BackLink.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 20px;\n`;\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  padding: 5px 10px;\n  color: black;\n  border: 1px solid black;\n  margin-bottom: 20px;\n  margin-top: 10px;\n  display: inline-block;\n`;\n\nexport const StyledList = styled.ul`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  gap: 20px;\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getMovieDetails } from '../../servises/getRefs';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { Container } from '../../components/SharedLayout/SharedLayout.styled';\nimport { Wrapper, StyledList, StyledLink } from './MovieDetails.styled';\nimport { BackLink } from 'components/BackLink';\nfunction MovieDetails() {\n  const { id } = useParams();\n  const [movie, setMovie] = useState({});\n  const [isLoaded, setIsLoaded] = useState(false);\n  const location = useLocation();\n  const backHref = location.state?.from ?? '../Movies.jsx';\n\n  useEffect(() => {\n    async function getDetails() {\n      try {\n        const film = await getMovieDetails(id);\n        setMovie(film);\n        setIsLoaded(true);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getDetails();\n  }, [id]);\n\n  if (isLoaded) {\n    return (\n      <main>\n        <Container>\n          <BackLink to={backHref}>Back to movies</BackLink>{' '}\n          <Wrapper>\n            <img\n              src={'https://image.tmdb.org/t/p/w200' + movie.poster_path}\n              alt={movie.title}\n            />\n\n            <div>\n              <h1>\n                {movie.title} (\n                {movie.release_date && movie.release_date.slice(0, 4)})\n              </h1>\n              <p>User score: {(movie.vote_average * 10).toFixed()}%</p>\n              <b>Overview</b>\n              <p>{movie.overview}</p>\n              <p>\n                <b> Genres: </b>\n                {movie.genres.length > 3\n                  ? movie.genres\n                      .slice(0, 3)\n                      .map(genre => <span key={genre.id}>{genre.name} </span>)\n                  : movie.genres.map(genre => (\n                      <span key={genre.id}>{genre.name} </span>\n                    ))}\n              </p>\n            </div>\n          </Wrapper>\n          <StyledList>\n            <li>\n              <StyledLink to=\"cast\">Cast</StyledLink>\n            </li>\n            <li>\n              <StyledLink to=\"reviews\">Reviews</StyledLink>\n            </li>\n          </StyledList>\n          <Suspense\n            fallback={\n              <RotatingLines\n                strokeColor=\"grey\"\n                strokeWidth=\"5\"\n                animationDuration=\"0.75\"\n                width=\"96\"\n                visible={true}\n              />\n            }\n          >\n            <Outlet />\n          </Suspense>\n        </Container>\n      </main>\n    );\n  }\n}\nexport default MovieDetails;\n"],"names":["Wrapper","styled","StyledLink","Link","StyledList","BackLink","to","children","size","id","useParams","useState","movie","setMovie","isLoaded","setIsLoaded","backHref","useLocation","state","from","useEffect","getMovieDetails","film","console","log","getDetails","src","poster_path","alt","title","release_date","slice","vote_average","toFixed","overview","genres","length","map","genre","name","Suspense","fallback","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}