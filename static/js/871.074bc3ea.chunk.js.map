{"version":3,"file":"static/js/871.074bc3ea.chunk.js","mappings":"0OA2CA,UAvCA,WACE,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE0BC,EAAAA,EAAAA,IAAgBR,GAF1C,YAEUG,EAFV,QAGgBM,OAHhB,uBAIML,GAAW,OAAID,IACfG,GAAc,GALpB,4EASII,QAAQC,IAAR,MATJ,2DADc,uBAAC,WAAD,wBAadC,EACD,GAAE,CAACZ,IAEAK,GAEA,8BACE,wBACGF,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,OAAQd,EAAX,EAAWA,GAAIe,EAAf,EAAeA,QAAf,OACX,2BACE,oCAAYD,MACZ,6BAAKC,EAAL,SAFOf,EADE,SAUZ,2DAEV,C","sources":["pages/Reviews/Reviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from '../../servises/getRefs';\n\nfunction Reviews() {\n  const { id } = useParams();\n  const [results, setResults] = useState([]);\n  const [gotReviews, setGotReviews] = useState(false);\n\n  useEffect(() => {\n    async function fetchReviews() {\n      try {\n        const results = await getMovieReviews(id);\n        if (results.length) {\n          setResults([...results]);\n          setGotReviews(true);\n          return;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchReviews();\n  }, [id]);\n\n  if (gotReviews) {\n    return (\n      <section>\n        <ul>\n          {results.map(({ author, id, content }) => (\n            <li key={id}>\n              <b>Author: {author}</b>\n              <p>\"{content}\"</p>\n            </li>\n          ))}\n        </ul>\n      </section>\n    );\n  } else {\n    return <p>Sorry, no reviews for this movie</p>;\n  }\n}\n\nexport default Reviews;\n// Footer\n// Â© 2023 GitHub, Inc.\n// Footer navigation\n// Terms\n// Privacy\n// Security\n"],"names":["id","useParams","useState","results","setResults","gotReviews","setGotReviews","useEffect","getMovieReviews","length","console","log","fetchReviews","map","author","content"],"sourceRoot":""}