{"version":3,"file":"static/js/770.6552f55d.chunk.js","mappings":"mTAGaA,EAAOC,EAAAA,EAAAA,GAAH,qGAMJC,EAAOD,EAAAA,EAAAA,GAAH,0DAIJE,GAAaF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,yEAIVI,EAAQJ,EAAAA,EAAAA,EAAH,wEAMLK,EAASL,EAAAA,EAAAA,IAAH,4E,4LCnBNM,EAAYN,EAAAA,EAAAA,IAAH,sBAETO,EAAOP,EAAAA,EAAAA,KAAH,sHAMJQ,EAAQR,EAAAA,EAAAA,MAAH,wLAULS,EAAST,EAAAA,EAAAA,OAAH,0R,6BCInB,MAtBA,YAAiC,IAAXU,EAAU,EAAVA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,KAAD,UACGF,EAAOG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAYC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAAhD,WACE,SAAC,KAAD,CACES,QAAQ,OACRC,IAAK,kCAAoCL,EACzCM,IAAKP,KAEP,SAAC,KAAD,UAAQA,QAPDD,EAWd,KAGN,ECyBD,MA1CA,WACE,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SA0B/B,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA0BF,GAA1B,iGAEyBG,EAAAA,EAAAA,IAAUH,EAAMI,QAFzC,YAEUT,EAFV,QAGeU,OAHf,uBAIMT,GAAU,OAAID,IAJpB,0BAOIW,EAAAA,GAAAA,MAAA,YAPJ,kDASIC,QAAQC,IAAR,MATJ,0DADc,wBAaVR,GAbW,SAAD,2BAcZS,CAAWT,EAEd,GAAE,CAACA,KAGF,2BACE,UAACvB,EAAD,YACE,UAACC,EAAD,CAAMgC,SA3BS,SAAAC,GACnBA,EAAEC,iBACFb,EAAgB,CAAEC,MAAOW,EAAEE,OAAOb,MAAMc,QACxCH,EAAEE,OAAOE,OACV,EAuBK,WACE,SAACpC,EAAD,CAAOqC,aAAa,MAAMC,KAAK,QAAQC,KAAK,OAAOC,WAAS,KAC5D,SAACvC,EAAD,CAAQsC,KAAK,SAAb,yBAEF,SAAC,EAAD,CAAYrC,OAAQc,QAI3B,C","sources":["components/List/List.styled.js","pages/Movies/Movies.styled.js","components/List/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  margin: -15px;\n`;\nexport const Item = styled.li`\n  width: 200px;\n  margin: 15px;\n`;\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  text-align: center;\n`;\nexport const Title = styled.p`\n  color: #09625e;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Poster = styled.img`\n  margin: 0;\n  padding: 0;\n  margin-bottom: 10px;\n`;\n","import styled from '@emotion/styled';\n\n// COMMON STYLE\n\nexport const Container = styled.div``;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n`;\nexport const Input = styled.input`\n  width: 300px;\n  border: 1px solid #0fa39c;\n  border-radius: 5px;\n  height: 20px;\n  padding: 2px 6px;\n  :focus {\n    outline: 0.5px solid #0fa39c;\n  }\n`;\nexport const Button = styled.button`\n  margin-left: 10px;\n  height: 27px;\n  width: 80px;\n  border: 1px solid #0fa39c;\n  border-radius: 5px;\n  background-color: #81f3ee;\n  cursor: pointer;\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: #2debe2;\n  }\n`;\n","// import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { List, Item, StyledLink, Title, Poster } from './List.styled';\n\nfunction MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <Item key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              <Poster\n                loading=\"lazy\"\n                src={'https://image.tmdb.org/t/p/w200' + poster_path}\n                alt={title}\n              />\n              <Title>{title}</Title>\n            </StyledLink>\n          </Item>\n        );\n      })}\n    </List>\n  );\n}\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearch } from 'servises/getRefs';\nimport { Container, Form, Input, Button } from './Movies.styled';\nimport MoviesList from '../../components/List/MoviesList';\n\nfunction Movies() {\n  const [result, setResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const searchSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.query.value });\n    e.target.reset();\n  };\n\n  useEffect(() => {\n    async function movieFetch(query) {\n      try {\n        const result = await getSearch(query.trim());\n        if (result.length) {\n          setResult([...result]);\n          return;\n        }\n        toast.error(`No no no`);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    if (query) {\n      movieFetch(query);\n    }\n  }, [query]);\n\n  return (\n    <main>\n      <Container>\n        <Form onSubmit={searchSubmit}>\n          <Input autoComplete=\"off\" name=\"query\" type=\"text\" autoFocus />\n          <Button type=\"submit\">Search </Button>\n        </Form>\n        <MoviesList movies={result} />\n      </Container>\n    </main>\n  );\n}\n\nexport default Movies;\n"],"names":["List","styled","Item","StyledLink","Link","Title","Poster","Container","Form","Input","Button","movies","location","useLocation","map","id","title","poster_path","to","state","from","loading","src","alt","useState","result","setResult","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getSearch","trim","length","toast","console","log","movieFetch","onSubmit","e","preventDefault","target","value","reset","autoComplete","name","type","autoFocus"],"sourceRoot":""}